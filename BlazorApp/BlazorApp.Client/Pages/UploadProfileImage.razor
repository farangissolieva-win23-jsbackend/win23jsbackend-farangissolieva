
@using System.Net.Http.Headers
@rendermode InteractiveServer
@inject HttpClient Http
@inject IConfiguration Configuration

<InputFile id="fileUploader" OnChange="OnInputFileChange" hidden />
<label for="fileUploader" class="button-circle"><i class="fa-regular fa-refresh"></i> </label>

@code {

    [Parameter]
    public string newUserImgLink { get; set; }

    private IBrowserFile selectedFile { get; set; }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        await HandleFileUpload();
    }


    private async Task HandleFileUpload()
    {
        if (selectedFile != null)
        {
            var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream());
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);

            var response = await Http.PostAsync(Configuration["FileUploadProfileApiUri"], content);

            if (response.IsSuccessStatusCode)
            {
                var newImageUrl = await response.Content.ReadAsStringAsync();
                newUserImgLink = newImageUrl;
            }
            else
            {
                Console.WriteLine("File upload failed");
            }
        }
    }
}
